// <auto-generated />
using System;
using GravyStream.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GravyStream.Migrations
{
    [DbContext(typeof(VodContext))]
    partial class VodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Vod")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GravyStream.Schema.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("VideoId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GravyStream.Schema.Contributor", b =>
                {
                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("VideoId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("GravyStream.Schema.ConversionJob", b =>
                {
                    b.Property<Guid>("StreamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("CompletedDuration")
                        .HasColumnType("time");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("TimeCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TotalDuration")
                        .HasColumnType("time");

                    b.HasKey("StreamId");

                    b.ToTable("ConversionJobs");
                });

            modelBuilder.Entity("GravyStream.Schema.MediaStream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Label")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Streams");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MediaStream");
                });

            modelBuilder.Entity("GravyStream.Schema.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Registered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("SsoId")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserName");

                    b.ToTable("People");
                });

            modelBuilder.Entity("GravyStream.Schema.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("GravyStream.Schema.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowsComments")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowsReactions")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Published")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Uploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<long>("Views")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasAlternateKey("Slug");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("GravyStream.Schema.VideoReaction", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonId", "VideoId");

                    b.HasIndex("ReactionId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoReactions");
                });

            modelBuilder.Entity("GravyStream.Schema.VideoTag", b =>
                {
                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VideoId", "Tag");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GravyStream.Schema.AudioStream", b =>
                {
                    b.HasBaseType("GravyStream.Schema.MediaStream");

                    b.Property<long>("Bitrate")
                        .HasColumnType("bigint");

                    b.Property<string>("Codec")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasDiscriminator().HasValue("AudioStream");
                });

            modelBuilder.Entity("GravyStream.Schema.SubtitleStream", b =>
                {
                    b.HasBaseType("GravyStream.Schema.MediaStream");

                    b.HasDiscriminator().HasValue("SubtitleStream");
                });

            modelBuilder.Entity("GravyStream.Schema.VideoStream", b =>
                {
                    b.HasBaseType("GravyStream.Schema.AudioStream");

                    b.Property<int?>("ResolutionX")
                        .HasColumnType("int");

                    b.Property<int?>("ResolutionY")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("VideoStream");
                });

            modelBuilder.Entity("GravyStream.Schema.Comment", b =>
                {
                    b.HasOne("GravyStream.Schema.Comment", "Parent")
                        .WithMany("Responses")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GravyStream.Schema.Person", "Person")
                        .WithMany("Comments")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GravyStream.Schema.Video", "Video")
                        .WithMany("Comments")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Person");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("GravyStream.Schema.Contributor", b =>
                {
                    b.HasOne("GravyStream.Schema.Person", "Person")
                        .WithMany("Contributions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GravyStream.Schema.Video", "Video")
                        .WithMany("Contributors")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("GravyStream.Schema.ConversionJob", b =>
                {
                    b.HasOne("GravyStream.Schema.MediaStream", "Stream")
                        .WithOne("ConversionJob")
                        .HasForeignKey("GravyStream.Schema.ConversionJob", "StreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stream");
                });

            modelBuilder.Entity("GravyStream.Schema.MediaStream", b =>
                {
                    b.HasOne("GravyStream.Schema.Video", "Video")
                        .WithMany("Streams")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("GravyStream.Schema.VideoReaction", b =>
                {
                    b.HasOne("GravyStream.Schema.Person", "Person")
                        .WithMany("Reactions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GravyStream.Schema.Reaction", "Reaction")
                        .WithMany("VideoReactions")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GravyStream.Schema.Video", "Video")
                        .WithMany("Reactions")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Reaction");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("GravyStream.Schema.VideoTag", b =>
                {
                    b.HasOne("GravyStream.Schema.Video", "Video")
                        .WithMany("Tags")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("GravyStream.Schema.Comment", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("GravyStream.Schema.MediaStream", b =>
                {
                    b.Navigation("ConversionJob");
                });

            modelBuilder.Entity("GravyStream.Schema.Person", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Contributions");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("GravyStream.Schema.Reaction", b =>
                {
                    b.Navigation("VideoReactions");
                });

            modelBuilder.Entity("GravyStream.Schema.Video", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Contributors");

                    b.Navigation("Reactions");

                    b.Navigation("Streams");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
